.taskido {
	cursor: default;
	user-select: none;
}
.taskido a {
	text-decoration: none !important;
	color: inherit !important;
}
.taskido span {
	display: contents;
}
.taskido .task .innerLink,
.taskido .task .outerLink {
	color: var(--interactive-accent) !important;
	text-decoration: underline !important;
}
.taskido .year {
	font-size: 30px;
	font-weight: bold;
	margin: 20px 0;
	color: var(--text-normal);
	text-align: center;
}
.taskido .details {
	display: flex;
	flex-direction: column;
	flex-wrap: nowrap;
	width: 100%;
	height: auto;
}
.taskido .todayHeader {
	font-size: 24px;
	font-weight: bold;
	text-align: center;
	margin: 10px 5px;
	cursor: pointer;
	border-radius: 10px;
}
.taskido .details.today {
	padding: 60px 0;
}
.taskido .counters {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	justify-content: center;
	align-content: center;
	margin: 20px 0;
}
.taskido .counter {
	display: flex;
	flex-direction: column;
	flex-wrap: nowrap;
	color: var(--text-normal);
	border-radius: 10px;
	padding: 5px;
	text-align: center;
	flex: 1 1 0;
	margin: 0 5px;
	min-width: 70px;
	max-width: 150px;
	overflow: hidden;
	cursor: pointer;
	background: var(--interactive-normal);
	box-shadow: var(--input-shadow);
}
.taskido .count {
	font-size: 18px;
	font-weight: normal;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}
.taskido .counter .label {
	font-size: 12px;
	font-weight: normal;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}
.taskido .motivation {
	margin: 20px 5px;
	text-align: center;
	font-size: 12px;
	color: var(--text-faint);
}
.taskido .dateLine {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	justify-content: space-between;
	align-items: center;
	margin: 10px 0;
}
.taskido .date {
	color: var(--text-normal);
	font-size: 16px;
	font-weight: bold;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}
.taskido .relative {
	color: var(--text-faint);
	font-weight: normal;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}
.taskido .task {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	border-radius: 10px;
	padding: 2.5px;
	margin: 2.5px 0;
	cursor: pointer;
}
.taskido .timeline,
.taskido .lines {
	display: flex;
	flex-direction: column;
	flex-wrap: nowrap;
}
.taskido .timeline {
	width: 50px;
	flex-shrink: 0;
	flex-grow: 0;
}
.taskido .lines {
	flex-shrink: 1;
	flex-grow: 1;
	overflow: hidden;
}
.taskido .stripe {
	display: flex;
	justify-content: center;
	align-items: center;
	flex-shrink: 1;
	flex-grow: 1;
	margin-top: 7.5px;
}
.taskido .stripe:after {
	content: "";
	height: 100%;
	width: 1px;
	background: var(--interactive-accent);
	margin: 5px 0;
}
.taskido .task.done .file {
	color: var(--text-faint);
	font-weight: normal;
}
.taskido .task.done .tag,
.taskido .task.done .repeat,
.taskido .task.done .priority,
.taskido .task.done .relative {
	color: var(--text-faint);
}
.taskido .task.done .content {
	text-decoration: line-through;
	color: var(--text-faint);
}
.taskido .line {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	align-items: center;
}
.taskido .line:first-child {
	line-height: 22px;
}
.taskido .line:empty {
	display: none;
}
.taskido .icon {
	display: flex;
	justify-content: center;
	align-items: center;
	flex-shrink: 0;
	flex-grow: 0;
	text-align: center;
}
.taskido .timeline .icon {
	text-align: center;
	color: var(--interactive-accent);
	height: 22px;
}
.taskido .timeline .icon svg {
	height: 18px;
	width: 18px;
	stroke-width: 1.75px;
}
.taskido .task .file {
	font-size: 15px;
	font-weight: bold;
	color: var(--task-color);
}
.taskido .task .content {
	display: block;
	white-space: break-word;
	font-size: 15px;
	font-weight: normal;
	color: var(--text-normal);
}
.taskido .tag {
	color: var(--tag-color) !important;
	background: var(--tag-background) !important;
	padding: 0px 5px;
}
.taskido .repeat,
.taskido .priority,
.taskido .relative {
	color: var(--text-normal);
	padding: 0px;
}
.taskido .tag,
.taskido .repeat,
.taskido .priority,
.taskido .relative {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	align-items: center;
	width: auto;
	font-size: 9px;
	border-radius: 5px;
	margin: 2px 5px 2px 0;
}
.taskido .tag .icon,
.taskido .repeat .icon,
.taskido .priority .icon,
.taskido .relative .icon {
	text-align: center;
	height: 18px;
}
.taskido .tag .label,
.taskido .repeat .label,
.taskido .priority .label,
.taskido .relative .label {
	margin-left: 2px;
}
.taskido .tag svg,
.taskido .repeat svg,
.taskido .priority svg,
.taskido .relative svg {
	height: 12px;
	width: 12px;
	stroke-width: 1.75px;
}
.taskido .task.overdue .content {
	color: #ff375f !important;
	font-style: italic !important;
}
.taskido .overdue .timeline {
	-webkit-animation: blink 2s infinite;
}
.taskido .overdue .timeline svg {
	stroke: #ff375f !important;
}
.taskido .overdue .stripe:after {
	background: #ff375f !important;
}
.taskido .add .timeline svg {
	stroke: var(--text-faint);
}
.taskido .done .timeline svg {
	stroke: var(--text-faint) !important;
}
.taskido .done .stripe:after {
	background: var(--text-faint) !important;
}
.taskido .process .timeline svg {
	-webkit-animation: rotate 2s linear infinite;
}
.taskido .add .file {
	color: var(--text-faint) !important;
}
/* Animations */
@-webkit-keyframes rotate {
	from {-webkit-transform: rotate(0deg)} to {-webkit-transform: rotate(360deg)}
}
@keyframes blink {
	from { opacity: 1 } 50% { opacity: 0.25 } to { opacity: 1 }
}
/* Quick Entry Panel */
.taskido .quickEntryPanel {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	background: var(--background-modifier-form-field);
	border: var(--input-border-width) solid var(--background-modifier-border);
	color: var(--text-normal);
	border-radius: 10px;
	box-shadow: 0 0 5px 0 rgba(0,0,0,0.1);
	margin: 0 5px 20px 5px;
	overflow: hidden;
	padding: 5px;
}
.taskido .quickEntryPanel .left {
	display: flex;
	flex-direction: column;
	flex-wrap: nowrap;
	align-items: center;
	width: 100%;
	flex-shrink: 1;
	flex-grow: 1;
	overflow: hidden;
	border-radius: 5px;
	padding: 0 5px !important;
}
.taskido .quickEntryPanel .right {
	display: block;
	width: auto;
	flex-shrink: 1;
	flex-grow: 1;
	overflow: hidden;
	border-radius: 5px;
}
.taskido .quickEntryPanel select,
.taskido .quickEntryPanel input,
.taskido .quickEntryPanel button {
	box-shadow: none !important;
	border: none !important;
	background: none !important;
	border-radius: 0 !important;
}
.taskido .quickEntryPanel select {
	height: 15px;
	width: 100%;
	font-size: 11px;
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
	padding: 0 !important;
	margin: 2.5px 0 !important;
	color: var(--text-muted);
	/*-webkit-appearance: none;*/
}
.taskido .quickEntryPanel select:hover {
	color: var(--text-normal);
}
.taskido .quickEntryPanel select option,
.taskido .quickEntryPanel select optgroup {
	background: var(--background-primary);
	/*background: var(--background-modifier-form-field);*/
	font-weight: normal;
	color: var(--text-normal);
}
.taskido .quickEntryPanel input {
	height: 20px;
	line-height: 20px;
	width: 100%;
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
	padding: 0 !important;
	margin: 0 !important;
	font-size: 14px;
}
.taskido .quickEntryPanel button {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	justify-content: center;
	align-items: center;
	height: 100%;
	width: auto;
	padding: 0 5px !important;
	margin: 0 !important;
}
.taskido .quickEntryPanel svg {
	height: 18px;
	width: 18px;
	stroke-width: 1.75px;
}
.taskido .quickEntryPanel select:active,
.taskido .quickEntryPanel input:active,
.taskido .quickEntryPanel button:active {
	border: none !important;
	box-shadow: none !important;
	transition: none !important;
}
/* Classes */
.taskido.noAnimation .process .timeline svg,
.taskido.noAnimation .overdue .timeline svg {
	-webkit-animation: none !important;
}
.taskido.todayFocus .todayHeader,
.taskido.todoFocus .counter#todo,
.taskido.todoFilter .counter#todo,
.taskido.overdueFocus .counter#overdue,
.taskido.overdueFilter .counter#overdue,
.taskido.unplannedFocus .counter#unplanned,
.taskido.unplannedFilter .counter#unplanned { color: var(--interactive-accent); background: hsla(var(--interactive-accent-hsl), 0.2); box-shadow: var(--input-shadow); }
.taskido.noYear .year,
.taskido.noMotivation .motivation,
.taskido.noRepeat .repeat,
.taskido.noTag .tag,
.taskido.noPriority .priority,
.taskido.noAdd .add,
.taskido.noFile .task:not(.star, .add) .line:nth-child(1),
.taskido.noInfo .task .line:nth-child(2),
.taskido.noDone .year[data-types="done"],
.taskido.noDone .details[data-types="done"],
.taskido.noDone .task.done,
.taskido.noRelative .relative,
.taskido.noQuickEntry .input { display: none !important; }
/* Focus */
.taskido.todayFocus .details:not(.today),
.taskido.todayFocus .year { display: none !important; }
.taskido.todayFocus .details.today { padding: 0; }
.taskido.todoFocus .details.today .task.due,
.taskido.todoFocus .details.today .task.scheduled,
.taskido.todoFocus .details.today .task.process,
.taskido.todoFocus .details.today .task.start,
.taskido.overdueFocus .task.overdue,
.taskido.unplannedFocus .task.unplanned { background: hsla(var(--interactive-accent-hsl), 0.2); }
/* Filter */
.taskido.todoFilter .year:not(.current):not([data-types*="due"][data-types*="scheduled"][data-types*="overdue"]) { display: none; }
.taskido.todoFilter .details:not(.today):not([data-types*="due"][data-types*="scheduled"][data-types*="overdue"]) { display: none; }
.taskido.todoFilter .task:not(.due, .scheduled, .process, .start) { display: none; }
.taskido.overdueFilter .year:not(.current):not([data-types*="overdue"]) { display: none; }
.taskido.overdueFilter .details:not(.today):not([data-types*="overdue"]) { display: none; }
.taskido.overdueFilter .task:not(.overdue) { display: none; }
.taskido.unplannedFilter .year:not(.current):not([data-types*="unplanned"]) { display: none; }
.taskido.unplannedFilter .details:not(.today):not([data-types*="unplanned"]) { display: none; }
.taskido.unplannedFilter .task:not(.unplanned) { display: none; }
